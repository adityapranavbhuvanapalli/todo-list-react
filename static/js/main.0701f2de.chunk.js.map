{"version":3,"sources":["logo.svg","components/Tasks.js","components/AddTask.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","Tasks","_ref","tasks","deleteTask","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","taskList","length","react_default","a","createElement","List","map","task","ListItem","button","onClick","alert","key","id","ListItemAvatar","Avatar","Work_default","ListItemText","primary","name","ExpandLess_default","ExpandMore_default","ListItemSecondaryAction","IconButton","edge","aria-label","Delete_default","Collapse","in","timeout","unmountOnExit","component","disablePadding","className","ListItemIcon","Book_default","desc","AddTask","state","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","props","addTask","_this2","this","onSubmit","TextField","label","onChange","Button","color","Component","App","filter","Math","random","concat","toConsumableArray","Paper","elevation","AppBar","position","Typography","variant","components_Tasks","AddTask_AddTask","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0701f2de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport BookIcon from '@material-ui/icons/Book';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst Tasks = ({tasks,deleteTask}) => {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        // setOpen(!task.open);\r\n        alert(\"Feature under development\")\r\n        setOpen(!open)\r\n    };\r\n\r\n    const taskList = tasks.length ? (\r\n        <List>\r\n            {\r\n                tasks.map(task => {return(\r\n                <div>\r\n                    <ListItem button onClick={()=>handleClick(task)} key={task.id}>\r\n                        <ListItemAvatar>\r\n                        <Avatar>\r\n                            <WorkIcon />\r\n                        </Avatar>\r\n                        </ListItemAvatar> \r\n                        <ListItemText\r\n                        primary={task.name}\r\n                        />\r\n                        {open ? <ExpandLess /> : <ExpandMore />}\r\n                        <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                            <DeleteIcon onClick={() => deleteTask(task.id)}/>\r\n                        </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding>\r\n                            <ListItem className={classes.nested}>\r\n                            <ListItemIcon>\r\n                                <BookIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={task.desc} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Collapse>\r\n                </div>\r\n                )})\r\n            }\r\n        </List>\r\n    )\r\n    : (<p>Add a task to the Todo-List</p>)\r\n    return (\r\n        <div className=\"tasks\">\r\n            {taskList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nexport default class AddTask extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        desc: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.name==='' && this.state.desc==='')\r\n            alert(\"Enter all the task details\")\r\n        else{\r\n            this.props.addTask(this.state);\r\n            this.setState({\r\n                name:'',\r\n                desc:''\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <form onSubmit={e=> this.handleSubmit(e)}>\r\n                    <TextField label=\"Task Name\"\r\n                        value={this.state.name}\r\n                        onChange={e=>{this.setState({name: e.target.value})}}\r\n                    />\r\n                    <br />\r\n                    <TextField label=\"Task Desc\"\r\n                        value={this.state.desc}\r\n                        onChange={e=>{this.setState({desc: e.target.value})}}\r\n                    />\r\n                    <br />               \r\n                    <Button color=\"primary\" onClick={e=>{this.handleSubmit(e)}}>Add new Task</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    tasks: [\r\n      {id:1, name:'Task 1', desc:\"This is a description of Task 1\"},\r\n      {id:2, name:'Task 2', desc:\"This is a description of Task 2\"},\r\n      {id:3, name:'Task 3', desc:\"This is a description of Task 3\"}\r\n    ]\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    const tasks = this.state.tasks.filter(task => {\r\n      return task.id !== id\r\n    });\r\n    this.setState({tasks});\r\n  }\r\n\r\n  addTask = (task) => {\r\n    task.id=Math.random()\r\n    // const newId = this.state.tasks.length+1;\r\n    this.setState(state => {\r\n      const tasks = [\r\n        ...state.tasks, \r\n        task    \r\n      ];\r\n \r\n      return {\r\n        tasks\r\n      };\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Paper elevation={3}>\r\n          <AppBar position=\"static\">\r\n            <Typography variant=\"h4\">To-do Tracker</Typography>\r\n          </AppBar>\r\n          <Tasks tasks={this.state.tasks} deleteTask={this.deleteTask}/>\r\n          <AddTask addTask={this.addTask}/> \r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}